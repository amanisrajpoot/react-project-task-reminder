{"version":3,"sources":["components/Button.js","components/Header.js","components/Task.js","components/Tasks.js","components/AddTask.js","components/Footer.js","components/About.js","App.js","reportWebVitals.js","index.js"],"names":["Button","color","text","onClick","style","backgroundColor","className","defaultProps","Header","title","onAdd","showAdd","location","useLocation","pathname","Task","task","onDelete","onToggle","reminder","onDoubleClick","id","cursor","day","Tasks","tasks","map","AddTask","useState","setText","setDay","setReminder","onSubmit","e","preventDefault","alert","type","placeholder","value","onChange","target","checked","currentTarget","Footer","to","About","App","showAddTask","setShowAddTask","setTasks","useEffect","a","fetchTasks","tasksFromServer","getTasks","fetch","res","json","data","fetchTask","addTask","method","headers","body","JSON","stringify","deleteTask","status","filter","toggleReminder","taskToToggle","updatedTask","path","exact","render","props","length","component","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.757151ef.chunk.js","sourcesContent":["import Proptypes from 'prop-types'\n\nconst Button = ({color, text, onClick}) => {\n\n    return <button onClick={onClick} \n        style = {{backgroundColor: color}} \n        className='btn'> {text}</button>\n\n}\n\nButton.defaultProps = {\n    color: \"brown\",\n    text: \"Add\",\n}\n\nButton.propTypes = {\n    color: Proptypes.string,\n    text: Proptypes.string,\n    onClick: Proptypes.func,\n}\n\nexport default Button\n","import Proptypes from 'prop-types'\nimport {useLocation} from 'react-router-dom'\nimport Button from './Button'\n\nconst Header = ({title, onAdd, showAdd}) => {\n    const location = useLocation()\n    return (\n        <header className='header'>\n            <h1>{title}</h1>\n            {location.pathname === '/' && <Button color = {showAdd? \"red\" : \"green\"} \n            text= {showAdd? \"Close\" : \"Add\"} onClick={onAdd}/>}\n            \n        </header>\n    )\n}\n\nHeader.defaultProps ={\n    title: \"Task Tracker\",\n}\n\nHeader.propTypes = {\n    title: Proptypes.string.isRequired,\n}\n\nexport default Header\n","import {FaTimes} from \"react-icons/fa\"\n\nconst Task = ({task, onDelete, onToggle}) => {\n    return (\n        <div className ={`task ${task.reminder \n            && 'reminder'}`} \n            onDoubleClick = {() => onToggle(task.id)}>\n            <h3>{task.text} <FaTimes \n            style={{color: 'red', cursor: 'pointer'}} \n            onClick={()=> onDelete(task.id)}/></h3>\n            <p>{task.day}</p>\n        </div>\n    )\n}\n\nexport default Task\n","import Task from \"./Task\"\n\nconst Tasks = ({tasks, onDelete, onToggle}) => {\n    return (\n        <>\n            {tasks.map((task)=> (<Task \n                key = {task.id} \n                task = {task} onDelete={onDelete} \n                onToggle={onToggle}/>))}     \n        </>\n    )\n}\n\nexport default Tasks\n","import {useState} from 'react'\n\nconst AddTask = ({onAdd}) => {\n    const [text, setText] = useState('')\n    const [day, setDay] = useState('')\n    const [reminder, setReminder] = useState(false)\n\n    const onSubmit= (e) =>{\n        e.preventDefault()\n\n        if(!text){\n            alert(\"Please enter a task\")\n            return\n        }\n        \n        onAdd({text, day, reminder})\n\n        setText('')\n        setDay('')\n        setReminder(false)\n\n    }\n\n    return (\n        <form className=\"add-form\" onSubmit={onSubmit}>\n            <div className=\"form-control\">\n                <label>Task</label>\n                <input type='text'placeholder='Add Task' \n                value={text} \n                onChange={(e)=> setText(e.target.value)}></input>\n            </div>\n            <div className=\"form-control\">\n                <label>Day & time</label>\n                <input type='text'placeholder='Add Day & Time' \n                value={day} \n                onChange={(e)=> setDay(e.target.value)}></input>\n            </div>\n            <div className=\"form-control form-control-check\">\n                <label>Set Reminder</label>\n                <input type='checkbox' checked={reminder} \n                value={reminder} \n                onChange={(e)=> setReminder(e.currentTarget.checked)}></input>\n            </div>\n\n            <input type=\"submit\" value=\"Save Task\" \n                className=\"btn btn-block\"></input>\n            \n        </form>\n    )\n}\n\nexport default AddTask\n","import {Link} from 'react-router-dom'\n\nconst Footer = () => {\n    return (\n        <footer>\n            <p>Copyright &copy; 2021</p>\n            <Link to='/about'>About</Link>\n        </footer>\n    )\n}\n\nexport default Footer\n","import {Link} from 'react-router-dom'\n\nconst About = () => {\n    return (\n        <div className=\"about\">\n            <h4>Version 1.0.0</h4>\n            <Link to='/'>Go Back</Link>\n        </div>\n    )\n}\n\nexport default About\n","import './index.css';\nimport {useState, useEffect} from \"react\"\nimport {BrowserRouter as Router, Route} from 'react-router-dom'\nimport Header from \"./components/Header\"\nimport Tasks from \"./components/Tasks\"\nimport AddTask from \"./components/AddTask\"\nimport Button from \"./components/Button\"\nimport Footer from \"./components/Footer\"\nimport About from \"./components/About\"\n\nconst App = () => {\n  const [showAddTask, setShowAddTask] = useState(false)\n  const [tasks, setTasks] =  useState([])\n\n  useEffect(() => {\n    const getTasks = async() =>{ \n    const tasksFromServer =  await fetchTasks()\n    setTasks(tasksFromServer)\n    }\n    getTasks()\n  },[])\n\n  const fetchTasks = async() => {\n    const res = await fetch('http://localhost:8000/tasks')\n    const data = await res.json()\n\n    return data\n  }\n\n  const fetchTask = async(id) => {\n    const res = await fetch(`http://localhost:8000/tasks/${id}`)\n    const data = await res.json()\n\n    return data\n  }\n\n  const addTask = async (task) =>{\n    //const id = Math.floor(Math.random() * 10000) +1\n    //const newTask = {id, ...task}\n    //setTasks([...tasks, newTask])\n    const res = await fetch('http://localhost:8000/tasks',{\n      method:'POST', \n      headers: {\n        'Content-type': 'application/json',\n      },\n        body: JSON.stringify(task),\n    })\n\n      const data = await res.json()\n\n      setTasks([...tasks, data])\n\n  } \n    \n  const deleteTask = async (id) => {\n    const res = await fetch(`http://localhost:8000/tasks/${id}`,{\n      method: 'DELETE'})\n    \n    res.status === 200\n      ? setTasks(tasks.filter((task) => task.id !== id))\n      : alert('Error Deleting This Task')\n  }\n\n  const toggleReminder = async (id) => {\n    const taskToToggle = await fetchTask(id)\n    const updatedTask = {...taskToToggle, reminder: !taskToToggle.reminder}\n\n    const res = await fetch(`http://localhost:8000/tasks/${id}`,{\n      method: 'PUT',\n      headers: {\n        'Content-type': 'application/json',\n      },\n      body: JSON.stringify(updatedTask),\n    })\n      \n    const data =  await res.json()\n\n    setTasks(tasks.map((task) => task.id === id? {...task, reminder: data.reminder}: task\n    \n      )\n    )\n  }\n\n  return (\n    <Router>\n      <div className = \"container\">\n          \n          <Header onAdd = {() => setShowAddTask(!showAddTask)} \n            showAdd = {showAddTask}/>\n          <Route\n          path='/' exact render={(props) =>(\n          <>    \n          {showAddTask && <AddTask onAdd = {addTask}/>}\n          {tasks.length >0 ? (<Tasks tasks = {tasks} \n          onDelete={deleteTask} onToggle = {toggleReminder}/>) : (\n            \"No task Left\") \n          }\n          </>)}\n          />\n          <Route path='/about' component={About} />\n          <Footer />\n      </div>\n    </Router>\n  )\n}\n\nexport default App\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}